@model ExpertCenter.Domain.PriceList

<h3>@Model.Name</h3>

<div style="display: flex; margin-top: 10px">
    <button class="btn btn-success" onclick="location.href='@Url.Action("AddProduct", "PriceLists", new { priceListId = Model.Id })'" id="addBtn">+ Добавить позицию</button>
    <button class="btn btn-secondary" onclick="location.href='@Url.Action("All", "PriceLists")'" style="margin-left: 5px;">Назад</button>
</div>

<table cellspacing=0 class="table table-bordered table-hover table-inverse table-striped" width=100% style="margin-top: 15px;">
    <thead>
        <tr>
            <th>Название товара</th>
            <th>Код товара</th>
            @foreach (var column in Model.Columns)
            {
                <th>@column.Header</th>            
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model.Products)
        {
            <tr>
                <td>@product.Name</td>
                <td>@product.Code</td>
                @foreach (var column in Model.Columns)
                {
                    string? val = product.UserColumnValues[column.Id];
                    <td>@(val ?? string.Empty)</td>
                }
                <td style="text-align: center;">
                    <button data-product-id="@product.Id" type="button" class="btn btn-danger btn-xs dltBtn" onclick='onDeleteButtonClick(this)'>&times</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    async function onDeleteButtonClick(sender) {
        if (!confirm('Вы действительно хотите удалить этот товар?')) {
            return;
        }

        let url = "@(Url.Action("DeleteProduct", "PriceLists"))/" + sender.dataset.productId;
        let response = await fetch(url, { method: 'DELETE' });

        if (response.ok) {
            sender.parentElement.parentElement.remove();
        }
        else {
            alert("Не удалось удалить товар");
        }
    }
</script>